{"version":3,"sources":["common/Slider/Slider.module.css","common/Points/Points.module.css","img/back.svg","img/next.svg","common/Arrow/Arrow.module.css","common/Arrow/Arrow.js","common/Points/Points.js","common/Slider/Slide.js","common/Slider/SlideContent.js","common/Slider/Slider.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Arrow","directions","handleClick","onClick","className","s","arrow","onTouchMove","touchMoveEvent","style","right","left","transform","src","rightArrow","alt","leftArrow","Point","active","index","clickSpan","point","background","Points","slide","indexOfSlider","points","map","i","key","Slide","props","backgroundImage","contents","margin","between","SlideContent","slideContent","translate","transition","width","Slider","getWidth","itemInSlide","window","innerWidth","img","useState","state","setstate","playRef","useRef","useEffect","current","nextSlide","play","intrval","setInterval","clearInterval","length","slider","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d05d360c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"Slider_slider__1jKqR\",\"slide\":\"Slider_slide__3FhJn\",\"slideContent\":\"Slider_slideContent__3NYCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"points\":\"Points_points__1sLTj\",\"point\":\"Points_point__3-o3o\"};","module.exports = __webpack_public_path__ + \"static/media/back.290174b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/next.ff2b9671.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3tdyW\"};","import React from 'react'\r\nimport  leftArrow from '../../img/back.svg'\r\nimport  rightArrow from '../../img/next.svg'\r\nimport s from './Arrow.module.css'\r\n\r\nexport default function Arrow({directions, handleClick}) {\r\n    return (\r\n        <div onClick={handleClick} className={s.arrow}\r\n            //onMouseLeave={() => handleClick()}\r\n            onTouchMove={touchMoveEvent => handleClick(touchMoveEvent)}\r\n            style={{\r\n                right:`${directions === 'right' && `25px`}`,\r\n                left:`${directions === 'left' &&  `25px`}`,\r\n                \r\n        }}>\r\n           {directions === 'right' \r\n           ? <img style={{transform:`translateX(-1px)`}} src={rightArrow} alt='right arrow'/>\r\n           : <img style={{transform:`translateX(1px)`}} src={leftArrow} alt='left arrow'/>} \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './Points.module.css'\r\n\r\n  const  Point = ({active,index,clickSpan})=> {\r\n    return <span \r\n        className = {s.point} \r\n        style={{background:`${active? 'black' : 'white'}`}}\r\n        onClick={()=>{clickSpan(index)}}\r\n    >\r\n    </span>\r\n}\r\n\r\nexport default function Points({slide,indexOfSlider,clickSpan} ) {\r\n    return (\r\n        <div className={s.points} >\r\n            {slide.map((slide, i)=> <Point key={slide} active={indexOfSlider === i} index={i} clickSpan={clickSpan}/>)}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './Slider.module.css'\r\n\r\nexport default function Slide(props) {\r\n    return (\r\n        <div className={s.slide} \r\n            style={{\r\n                backgroundImage:`url(${props.contents})`,\r\n                margin:` 0 ${props.between}px`,\r\n            }}> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Slide from './Slide'\r\nimport s from './Slider.module.css'\r\n\r\nexport default function SlideContent(props) {\r\nlet slide = props.slide\r\n    return (\r\n        <div className={s.slideContent} \r\n            style={{\r\n                transform:`translateX(-${props.translate}px)`,\r\n                transition: `transform ${props.transition}s ease-out 0s`,\r\n                width:`${props.width}px`,\r\n            }}>\r\n            {slide.map((slide,index)=><Slide key={index} contents={slide} between={props.between}/>)}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport Arrow from '../Arrow/Arrow'\r\nimport Points from '../Points/Points'\r\nimport SlideContent from './SlideContent'\r\nimport s from './Slider.module.css'\r\n\r\n\r\n\r\nexport default function Slider(props) {\r\n    \r\n    let getWidth =()=> {\r\n        return props.itemInSlide? window.innerWidth / props.itemInSlide: window.innerWidth\r\n    }\r\n\r\n    let slide = props.img\r\n\r\n    const [state,setstate] = useState({\r\n        indexOfSlider:0,\r\n        translate: 0,\r\n        transition:0.45,\r\n    })\r\n    \r\n    const {\r\n        indexOfSlider,\r\n        transition,\r\n        translate\r\n    } = state\r\n\r\n    const playRef = useRef()\r\n    useEffect(()=>{playRef.current = nextSlide})\r\n\r\n    useEffect(()=>{\r\n        const playImage = ()=>{\r\n            playRef.current()\r\n\r\n        }\r\n        if(props.play != null){\r\n            const intrval = setInterval(playImage, props.play * 1000)\r\n            return ()=>clearInterval(intrval)\r\n        }\r\n    },[props.play])\r\n\r\n    const nextSlide=()=>{\r\n        if(indexOfSlider === slide.length - props.itemInSlide){\r\n            return setstate({...state,\r\n                translate:0,\r\n                indexOfSlider:0,\r\n            })\r\n        }\r\n        \r\n        setstate({...state,\r\n            indexOfSlider:indexOfSlider + props.itemInSlide,\r\n            translate:(indexOfSlider + props.itemInSlide) * getWidth()\r\n        })\r\n    }\r\n    const prevSlide=()=>{ \r\n        if(indexOfSlider === 0){\r\n            return setstate({...state,\r\n                translate:(slide.length - props.itemInSlide) * getWidth(),\r\n                indexOfSlider:(slide.length - props.itemInSlide),\r\n            })\r\n        }\r\n        setstate({\r\n            ...state,\r\n            indexOfSlider:indexOfSlider - props.itemInSlide,\r\n            translate:(indexOfSlider - props.itemInSlide) * getWidth()\r\n        })\r\n    }\r\n    const clickSpan=(index)=>{\r\n        setstate({\r\n            ...state,\r\n            indexOfSlider:index,\r\n            translate:(index) * getWidth()\r\n        })\r\n    }\r\n    return (\r\n        <div className={s.slider}>\r\n            <SlideContent \r\n                transition={transition}\r\n                translate={translate} \r\n                width={getWidth() * slide.length}\r\n                slide ={slide}\r\n                between={props.between}\r\n                >\r\n            </SlideContent>\r\n            {!props.play && \r\n                <div>\r\n                    <Arrow directions ='left' handleClick={prevSlide}/>\r\n                    <Arrow directions='right' handleClick={nextSlide}/>\r\n                </div>\r\n            }\r\n            \r\n            <Points slide={slide} indexOfSlider={indexOfSlider} clickSpan={clickSpan}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Slider from './common/Slider/Slider';\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Slider {...props}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst img=[\n  `https://images.unsplash.com/photo-1496442226666-8d4d0e62e6e9?ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80`,\n  `https://images.unsplash.com/photo-1522083165195-3424ed129620?ixlib=rb-1.2.1&auto=format&fit=crop&w=1460&q=80`,\n  `https://images.unsplash.com/photo-1518235506717-e1ed3306a89b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80`,\n  `https://images.unsplash.com/photo-1516893842880-5d8aada7ac05?ixlib=rb-1.2.1&auto=format&fit=crop&w=1400&q=80`\n]\nReactDOM.render(\n  <React.StrictMode>\n    <App img = {img}/*  play={1} */itemInSlide ={2} between={5}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}